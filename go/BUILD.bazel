load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("//go:rules.bzl", "swig_native_go_library")
load("@bazel_gazelle//:def.bzl", "gazelle")

# for updating dependencies
gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go/go.mod",
        "-to_macro=go/deps.bzl%go_dependencies",
        "-prune",
        "-build_file_proto_mode=disable_global",
    ],
    command = "update-repos",
)


swig_native_go_library(
    name = "typedb_driver_go_native",
    lib = "//c:typedb_driver_clib_headers",
    interface = "//c:typedb_driver.i",
    includes = ["//c:swig/typedb_driver_go.swg"],
    enable_cxx = True,
    visibility = ["//visibility:public"],
)

go_library(
    name = "driver_lib",
    srcs = [
        "driver_eg.go",
    ],
    clinkopts = [
        "-L/Users/nickan/typedb-driver/bazel-bin/go", # TODO use relative path. For now use the bazel output path.
        "-ltypedb_driver_go_native",
        "-framework", "CoreFoundation"
        ],

    visibility = ["//visibility:public"],
    deps = ["//go:typedb_driver_go_native"],
    cgo=True
)

go_binary(
    name = "driver_test",
    embed = [":driver_lib"],

    visibility = ["//visibility:public"],
)